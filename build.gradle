// * * * * * * * * * * * *
// Plugins
// * * * * * * * * * * * *

plugins {
    id 'groovy'
    id 'java-gradle-plugin'

    // Publishing publicly
    id 'com.gradle.plugin-publish' version '0.10.0'

    // Publishing to Artifactory
    id 'maven-publish'
}

// * * * * * * * * * * * *
// Dependencies
// * * * * * * * * * * * *

repositories {
    jcenter()
}

dependencies {
    compile     gradleApi()
    testCompile gradleTestKit()
    testCompile 'junit:junit:4+'
}

// * * * * * * * * * * * *
// Project configuration
// * * * * * * * * * * * *

project.group           = 'com.navid.loggergenerator'
project.version         = '1.2.0'


// Configuration for: java-gradle-plugin
gradlePlugin {
    plugins {
        loggerGeneratorPlugin {
            id = 'com.navid.LoggerGeneratorPlugin'
            implementationClass = 'com.navid.loggergenerator.plugin.LoggerGeneratorPlugin'
        }
    }
}

// Configuration for: com.gradle.plugin-publish
pluginBundle {
    website = 'https://github.com/albertonavarro/loggergenerator-gradle-plugin'
    vcsUrl = 'scm:git@github.com/albertonavarro/loggergenerator-gradle-plugin.git'
    tags = ['loggergenerator', 'looking4q', 'navid']
    description = 'Logger Generator Plugin for Logger Generator tooling as described in https://looking4q.blogspot.com/2018/11/logging-cutting-edge-practices.html'
    
    plugins {
        loggerGeneratorPlugin {
            displayName = 'Logger Generator Plugin'
        }
    }
}

// Publishing to Artifactory
// -------------------------

// Configures the publication to push, and the repository to push to
publishing {
    publications {
        pluginPublication (MavenPublication) {
            from        components.java
            groupId     project.group
            artifactId  project.name
            version     project.version
        }
    }
}
